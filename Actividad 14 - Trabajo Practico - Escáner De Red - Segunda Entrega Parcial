üìù Documento de Entrega Parcial ‚Äì Esc√°ner de Red
Nombre del alumno: Fabrizio Bruno
Curso: 5to 1ra
Materia: Redes
Escuela T√©cnica N¬∞36
Tecnolog√≠a elegida: Java
Fecha: 12/08/2025

1. Descripci√≥n general del programa

El programa desarrollado tiene como objetivo escanear una red local para detectar dispositivos conectados dentro de un rango de direcciones IP definido por el usuario.
Esta herramienta permite identificar qu√© equipos est√°n activos, comprobar si responden a comandos b√°sicos como ping, obtener el nombre del host y recopilar informaci√≥n √∫til para diagn√≥stico y mantenimiento.
El uso principal est√° orientado a administradores de red, t√©cnicos en inform√°tica o personal de soporte que requiera conocer el estado de los dispositivos en una red local. Tambi√©n puede utilizarse como apoyo en tareas de seguridad inform√°tica y monitoreo.

2. Objetivos

  - Identificar todos los dispositivos activos dentro de un rango de IP determinado.
  - Verificar conectividad mediante comandos de red (ping).
  - Recopilar informaci√≥n b√°sica como direcci√≥n IP, nombre del host y tiempo de respuesta.
  - Organizar resultados en un formato legible y exportable para uso posterior.

3. Alcance

El sistema se desarrollar√° para funcionar en redes IPv4 locales, permitiendo al usuario definir manualmente el rango de direcciones a escanear.
La aplicaci√≥n contar√° con una interfaz gr√°fica sencilla para facilitar su uso, y se planea que sea multiplataforma, ejecut√°ndose en sistemas operativos como Windows y Linux.

4. Dise√±o b√°sico del sistema

Clases principales previstas:
  - MainApp: Interfaz gr√°fica principal (ventana con campos de IP, botones de control y tabla de resultados).
  - NetworkScanner: Encargada de realizar el escaneo de direcciones IP y obtener informaci√≥n con comandos como ping y nslookup.
  - Device: Representa cada equipo detectado, con atributos como IP, nombre del host, estado y tiempo de respuesta.
  - ResultSaver: Guarda los resultados del escaneo en archivos de texto o CSV, seg√∫n elecci√≥n del usuario.

5. Tecnolog√≠as elegidas

  - Lenguaje: Java
  - Librer√≠as: java.net, java.io, javax.swing y Runtime.getRuntime().exec() para ejecutar comandos del sistema.

Motivo de elecci√≥n: Java ofrece un entorno estable, multiplataforma y con bibliotecas integradas para trabajar con redes y crear interfaces gr√°ficas f√°cilmente.

6. Funcionalidades previstas

  - Definir rango de IP a escanear.
  - Ejecutar escaneo y mostrar resultados en tiempo real.
  - Filtrar resultados (solo dispositivos activos).
  - Exportar resultados a archivo de texto o CSV.
  - Mostrar nombre de host y tiempo de respuesta por dispositivo.

7. Posibles mejoras futuras

  - Compatibilidad con IPv6.
  - Escaneo de puertos abiertos.
  - Integraci√≥n con bases de datos para hist√≥rico de escaneos.
  - Notificaciones autom√°ticas si un dispositivo deja de estar activo.
  - Versi√≥n portable sin instalaci√≥n.
